<?php
/**
 * Copyright 2020 LABOR.digital
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Last modified: 2020.03.20 at 20:57
 */

declare(strict_types=1);

namespace LaborDigital\Typo3FrontendApi\Event;

/**
 * Class SiteMenuHtmlFilterEvent
 *
 * Dispatched when a when a menu object is rendered in based on the site configuration.
 * Used to filter the generated html before it is passed to the post processor
 *
 * @package LaborDigital\Typo3FrontendApi\Event
 */
class SiteMenuHtmlFilterEvent {
	
	/**
	 * The prepared typo script definition of the menu
	 * @var array
	 */
	protected $definition;
	
	/**
	 * The menu type to filter / generate
	 * @var string
	 */
	protected $type;
	
	/**
	 * The menu html that was generated by the typo script frontend controller
	 * @var string
	 */
	protected $menu;
	
	/**
	 * SiteMenuPreProcessorEvent constructor.
	 *
	 * @param array  $definition
	 * @param string $type
	 * @param string $menu
	 */
	public function __construct(array $definition, string $type, string $menu) {
		$this->definition = $definition;
		$this->type = $type;
		$this->menu = $menu;
	}
	
	/**
	 * Returns the prepared typo script definition of the menu
	 * @return array
	 */
	public function getDefinition(): array {
		return $this->definition;
	}
	
	/**
	 * Updates the prepared typo script definition of the menu
	 *
	 * @param array $definition
	 *
	 * @return SiteMenuHtmlFilterEvent
	 */
	public function setDefinition(array $definition): SiteMenuHtmlFilterEvent {
		$this->definition = $definition;
		return $this;
	}
	
	/**
	 * Returns the menu type to filter / generate
	 * @return string
	 */
	public function getType(): string {
		return $this->type;
	}
	
	/**
	 * Returns the menu html that was generated by the typo script frontend controller
	 * @return string
	 */
	public function getMenu(): string {
		return $this->menu;
	}
	
	/**
	 * Used to update the menu html that was generated by the typo script frontend controller
	 *
	 * @param string $menu
	 *
	 * @return SiteMenuHtmlFilterEvent
	 */
	public function setMenu(string $menu): SiteMenuHtmlFilterEvent {
		$this->menu = $menu;
		return $this;
	}
}