(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{366:function(t,e,a){"use strict";a.r(e);var n=a(44),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[t._v("#")]),t._v(" Tools")]),t._v(" "),a("p",[t._v("In addition to the core features, the frontend API extension comes with a set of additional tools you can activate using your ext config file.")]),t._v(" "),a("p",[t._v("All tool configuration options can be found under "),a("code",[t._v("$configurator->frontendApi()->tool()")])]),t._v(" "),a("h2",{attrs:{id:"up-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#up-endpoint"}},[t._v("#")]),t._v(" Up endpoint")]),t._v(" "),a("p",[t._v("The up endpoint is a fairly simple addition; it registers a new route at "),a("code",[t._v("/api/up")]),t._v(', which returns "OK" and a state of 200 if your system is running as desired.\nYou can use this as a health or uptime check. There are no other options for this endpoint.')]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("OptionList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigOptionList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("MyExtConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExtConfigInterface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("configure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ExtConfigOptionList")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ExtConfigContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When you configure the route it will be auto-enabled")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("frontendApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureUpRoute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h2",{attrs:{id:"scheduler-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduler-endpoint"}},[t._v("#")]),t._v(" Scheduler endpoint")]),t._v(" "),a("p",[t._v("When you are working with the "),a("a",{attrs:{href:"https://docs.typo3.org/c/typo3/cms-scheduler/master/en-us/",target:"_blank",rel:"noopener noreferrer"}},[t._v("scheduler"),a("OutboundLink")],1),t._v(" TYPO3 core extension, you can either run a task using the CLI or manually in the backend.\nThere is no built-in way to run a task / to trigger the scheduler cronjob via HTTP (as far as I know).")]),t._v(" "),a("p",[t._v("If you enable the scheduler endpoint AND have the scheduler extension installed, you can do both using your frontend API.")]),t._v(" "),a("p",[t._v("The endpoint is accessible on "),a("code",[t._v("/api/scheduler/run")]),t._v(" to run the whole scheduler task list\nIf you provide the id of a given task like "),a("code",[t._v("/api/scheduler/run/1")]),t._v(" for task ID 1, you can also execute a single task.\nWhile you are running in a Dev environment and execute a single task it will always be forced to run, ignoring the cronjob configuration;\ncan be used to debug your scheduler tasks locally.")]),t._v(" "),a("p",[t._v("Currently, it is not possible to force a scheduler task to run in the production environment.")]),t._v(" "),a("p",[t._v('The token is used as a "password" to access the scheduler endpoint only for authenticated users.\nThe token can either be received using the '),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc6750",target:"_blank",rel:"noopener noreferrer"}},[t._v("Authentication Bearer header"),a("OutboundLink")],1),t._v(' or via query parameter "token" when the "allowTokenInQuery" option is enabled')]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Arguments")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("$token")]),t._v(' Defines either a single or multiple tokens that act as "password" to access the scheduler endpoint.\nThe token can either be received using the Authentication Bearer header or via query parameter "token," when enabled by setting "allowTokenInQuery" to true')]),t._v(" "),a("li",[a("strong",[t._v("$options")]),t._v(" The options to configure the scheduler execution\n"),a("ul",[a("li",[a("strong",[t._v("enabled")]),t._v(" bool (TRUE): True by default, enables the endpoint,\nsetting this to false disables it after it was previously enabled.")]),t._v(" "),a("li",[a("strong",[t._v("maxExecutionType")]),t._v(" int (60*10): The number in seconds the php script\ncan run before it is forcefully killed by the server.")]),t._v(" "),a("li",[a("strong",[t._v("allowTokenInQuery")]),t._v(" bool (FALSE): If set to true the token may be passed by query\nparameter instead of a HTTP header. This is TRUE by default if you are running in a dev environment.")])])])])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("OptionList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigOptionList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("MyExtConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExtConfigInterface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("configure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ExtConfigOptionList")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ExtConfigContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Simple configuration")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("frontendApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureSchedulerRoute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"A_STRONG_TOKEN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configuration with additional options")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("frontendApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureSchedulerRoute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"A_STRONG_TOKEN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"maxExecutionType"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h2",{attrs:{id:"imaging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imaging"}},[t._v("#")]),t._v(" Imaging")]),t._v(" "),a("p",[t._v("One major problem when you work with an API based frontend is that you lose access to all view-helpers.\nTherefore the file/fileReference resources for images contain a list of all possible crop variants of the resource.\nThe generation of resized images for thumbnails or retina support a feature of the default API result.")]),t._v(" "),a("p",[t._v("Imaging tries to solve this problem by providing a particular endpoint for image processing. The endpoint is not part of the default "),a("code",[t._v("/api/")]),t._v(" routing to avoid additional overhead.\nInstead, the endpoint is a separate PHP file you find at "),a("code",[t._v("/fileadmin/imaging.php")]),t._v(". If the entry point file does not exist yet, clear the system caches in the backend and reload the page once.")]),t._v(" "),a("h3",{attrs:{id:"imaging-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imaging-configuration"}},[t._v("#")]),t._v(" Imaging Configuration")]),t._v(" "),a("p",[t._v("The endpoint is not active by itself and requires to be configured. You can configure the endpoint in your extConfig.")]),t._v(" "),a("p",[t._v("To configure the endpoint, you have to provide a list of processing definitions for the\nsize of the image. Each definition has a unique key. The key can be used in the imaging.php endpoint\nto tell the server which image size you want to have served. You can also set a default cropping definition, which can be overwritten by request to imaging.php, too.")]),t._v(" "),a("p",[t._v("The definition of the sets is done as an array with the $key as the unique key of the definition\nand the $value as an array containing an imaging definition like you would when you use getResizedFile()\non the FalFileService!")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v('"default" is a special key. It applies to ALL images that don\'t have a specific definition key given!')])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Arguments")]),t._v(" "),a("ul",[a("li",[t._v("$definitions A list of key => value pairs to define the imaging definitions\nEach value array can contain the following keys:\n"),a("ul",[a("li",[a("strong",[t._v("width")]),t._v(" int|string: see *1")]),t._v(" "),a("li",[a("strong",[t._v("height")]),t._v(" int|string: see *1")]),t._v(" "),a("li",[t._v("minWidth int The minimal width of the image in pixels")]),t._v(" "),a("li",[t._v("minHeight int The minimal height of the image in pixels")]),t._v(" "),a("li",[t._v("maxWidth int The maximal width of the image in pixels")]),t._v(" "),a("li",[t._v("maxHeight int The maximal height of the image in pixels")]),t._v(" "),a("li",[t._v("crop bool|string|array: True if the image should be cropped instead of stretched\nCan also be the name of a cropVariant that should be rendered\nCan be an array with (x,y,width,height) keys to provide a custom crop mask")])])]),t._v(" "),a("li",[t._v("$options Additional options for the imaging endpoint\n"),a("ul",[a("li",[a("strong",[t._v("redirectDirectoryPath")]),t._v(" string: defines the directory\nwhere the redirect information is stored (not the original image files!).\nDEFAULT: The default path to the var directory based on your TYPO3 config /imaging")]),t._v(" "),a("li",[a("strong",[t._v("endpointDirectoryPath")]),t._v(" string: The directory where the imaging.php entry point should be compiled. The directory has to be writable by the webserver!\nDEFAULT: The default fileadmin directory inside your public folder")]),t._v(" "),a("li",[a("strong",[t._v("imagingProvider")]),t._v(" string: By default, the processing is done by the TYPO3 core; if you want to use another provider like s3 as a backend, you can create a custom imaging provider. The given value is the class name of your provider.\nThe class has to implement the ImagingProviderInterface!\nDEFAULT: LaborDigital\\Typo3FrontendApi\\Imaging\\Provider\\CoreImagingProvider")]),t._v(" "),a("li",[a("strong",[t._v("webPConverterOptions")]),t._v(" array: Optional, additional options to be passed to the\nwebP converter implementation (rosell-dk/webp-convert). See the link below for possible options")])])])]),t._v(" "),a("p",[t._v("*1: A numeric value, can also be a simple calculation. For further details take a look at "),a("a",{attrs:{href:"https://docs.typo3.org/m/typo3/reference-typoscript/8.7/en-us/Functions/Imgresource/Index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("imageResource.width"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("OptionList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ExtConfigOptionList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("MyExtConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExtConfigInterface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("configure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ExtConfigOptionList")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ExtConfigContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Simple configuration")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("frontendApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureImaging")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"definitionKey"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"maxWidth"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configuration with additional options")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$configurator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("frontendApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureImaging")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"webPConverterOptions"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"jpg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"quality"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h3",{attrs:{id:"what-imaging-does"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-imaging-does"}},[t._v("#")]),t._v(" What Imaging does")]),t._v(" "),a("p",[t._v("After you registered, your configuration imaging will automatically change all URLs that are returned for image files when they are served as an image resource.\nInstead of the real image URL, the new path will point to something similar to "),a("code",[t._v("/fileadmin/imaging.php?file=name-of-your-file.haaaaaaaaaaash.r12.jpg")])]),t._v(" "),a("p",[t._v("Yes, the initial request to the imaging.php is still a PHP file, meaning for every image, you will run a PHP script.\nHowever, the entry point is streamlined to cause only minimal overhead. For that reason, the entry-point will not serve the image itself, but redirect the request to the correct URL instead.\nBefore it redirects the request it does the following:")]),t._v(" "),a("ul",[a("li",[t._v("A resized image version is generated based on the given definition or the default definition")]),t._v(" "),a("li",[t._v("Optionally a cropped version is generated if defined in the definition or the crop parameter")]),t._v(" "),a("li",[t._v("If a png/jpg (or a cropped version of any other type!) is served, a .wepb image is auto-generated")]),t._v(" "),a("li",[t._v("Detect if the current client supports .webp and serve the .webp format if required")])]),t._v(" "),a("p",[t._v("After the base actions, the request is redirected to a static file. For all browsers that use intelligent caching,\nall subsequent requests will then be sent to the static file instead of the PHP file. Meaning we only have the PHP overhead for the first request.")]),t._v(" "),a("h3",{attrs:{id:"how-to-use-imaging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-imaging"}},[t._v("#")]),t._v(" How to use Imaging")]),t._v(" "),a("p",[t._v("The basic usage of Imaging is simple: Use the new URL instead of your image source.")]),t._v(" "),a("ul",[a("li",[t._v('To apply a definition configured in your ext config, append the "&definition=DEFINITION_KEY" parameter to the URL.\nYou can create any definition key for every image file served by Imaging.')]),t._v(" "),a("li",[t._v('If you want to crop the image to a format that is not part of your definition, you can pass the "&crop=CROP_VARIANT" parameter to the URL.\n'),a("ul",[a("li",[t._v("If the requested image does not have the given variant, the original image dimensions are used.")]),t._v(" "),a("li",[t._v('To disable the cropping for a definition that defines a crop variant set "crop" to "none".')])])]),t._v(" "),a("li",[t._v('If you want to generate the image for retina displays you can append the "&x2=true" parameter to the URL.\nWhen you use this parameter all values will be multiplied by 2 before they are applied to the image')])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v('A note on "crop"')]),t._v(" "),a("ul",[a("li",[t._v('If no crop parameter BUT a "default" crop variant exists, it is automatically selected.')]),t._v(" "),a("li",[t._v('If the definition specifies a "crop" option it will be preferred over the "default" option.')]),t._v(" "),a("li",[t._v("If you want to retrieve the uncropped image use crop=none")]),t._v(" "),a("li",[t._v('If the given crop option (either as parameter or via definition) was not found for the image "default" will be used as a fallback')]),t._v(" "),a("li",[t._v('If no "default" variant was found for the image the uncropped image will be returned')])])]),t._v(" "),a("h3",{attrs:{id:"caching"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#caching"}},[t._v("#")]),t._v(" Caching")]),t._v(" "),a("p",[t._v("All generated redirects are cached as files in the "),a("code",[t._v("/var/imaging")]),t._v(' directory. To reset all generated redirects, clear your "global TYPO3 cache".')]),t._v(" "),a("h3",{attrs:{id:"creating-custom-imaging-providers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-custom-imaging-providers"}},[t._v("#")]),t._v(" Creating custom imaging providers")]),t._v(" "),a("p",[t._v("By default, Imaging uses TYPO3's core image manipulation capabilities and processed file storage.\nIt is also possible to create a custom implementation of an ImagingProvider class if you want to use AWS S3 or want to redirect\nyour assets to a CDN before they are delivered.")]),t._v(" "),a("p",[t._v("To create a new imaging provider create a new class, that implements the ImagingProviderInterface or extends the AbstractImagingProvider class:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3FrontendApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Imaging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Provider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3FrontendApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Imaging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ImagingContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("MyImagingProvider")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractImagingProvider")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$definition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("FileInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fileInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("ImagingContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do your manipulation here")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set the path to redirect the request here:")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("defaultRedirect")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/path/to/resource.jpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional: If you want to serve a webP if possible,")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// you can set the webp redirect explicitly. If you don't want webp support")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set this to NULL instead.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("webPRedirect")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/path/to/resource.webp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// INFO: Path's that start with a slash (/) automatically ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get the current host name prepended.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);